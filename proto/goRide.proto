syntax = "proto3";

package goRide;

option go_package = "github.com/Craigp10/goRide/goRide";


// The route service definition.
service RouteService {
  // GetRoute returns the details of a specific route.
  rpc GetRoute(GetRouteRequest) returns (GetRouteResponse);
  rpc SubmitGrid(SubmitGridRequest) returns (SubmitGridResponse);
  rpc SendCoordinates(SendCoordinatesRequest) returns (SendCoordinatesResponse);
  rpc StreamRide(StreamRideRequest) returns (stream Coordinates);
}

message Grid {
  repeated Row rows = 1;
}

message Row {
  repeated int64 values = 1;
}

message Coordinates {
  int64 x = 1;
  int64 y = 2;
}

// The request message containing the route ID.
message GetRouteRequest {
  string route_id = 1;
}

// The response message containing the route details.
message GetRouteResponse {
  string route_id = 1;
  repeated Coordinates route = 2;
  // Add other fields as needed to describe the route
}

message SubmitGridRequest {
  // Define the structure of the grid request message
  // Add fields to represent the grid data
  int64 width = 1;
  int64 height = 2;
}

message SubmitGridResponse {
  // Define the structure of the grid response message
  // Add fields as needed
  Grid grid = 1;
}

message SendCoordinatesRequest {
  // Define the structure of the new points request message
  // Add fields to represent the new points data
  Coordinates start = 1;
  Coordinates end = 2;
}

message SendCoordinatesResponse {
  // Define the structure of the new points response message
  // Add fields as needed
  string route_id = 1;
  repeated Coordinates route = 2;
  int64 distance = 3;
}


message StreamRideRequest {
  string route_id = 1;
}